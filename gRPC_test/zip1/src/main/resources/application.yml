server:
  port: 80   # server.port=80
#  servlet:
#    context-path: /zip  # server.servlet.context-path=/probono
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: user01
    #mysql container? ?? ??? ??, build? ?? ?? ??
    #build?? test? ?? db? ?? ??? ???? ?? ??? skip?? ?
    url: jdbc:mysql://127.0.0.1:8777/fisa?useSSL=false&allowPublicKeyRetrieval=true
    #url: jdbc:mysql://mysqlcommdb:3306/fisa?useSSL=false&allowPublicKeyRetrieval=true
    #url: jdbc:mysql://127.0.0.1:3306/fisa?useSSL=false&allowPublicKeyRetrieval=true
    #url: jdbc:mysql://db17.cfaa2gyks0rb.ap-northeast-2.rds.amazonaws.com:3306/fisa?useSSL=false&allowPublicKeyRetrieval=true
    username: user01
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    generate-ddl: true
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  mvc: # jsp 사용을 위한 필수 설정, WEB-INF 폴더 직접 만들고, pom.xml에 설정, ProbonoController의 메소드 setViewName()확인하기
    view:
      prefix: /WEB-INF/jsp/    # spring.mvc.view.prefix: /WEB-INF/
      suffix: .jsp         # spring.mvc.view.suffix: .jsp

grpc:
  client:
    auth-server: # 이건 gRPC 서버 이름 지정 아무거나 가능
      address: 'static://127.0.0.1:8090' # static 뒤에 gRPC 서버의 주소와 포트
      negotiation-type: plaintext # 통신 할 때 방식

#cloud:
#  aws:
#    s3:
#      bucket: mybucketwaf
#    credentials:
#      access-key:
#      secret-key:
#    region:
#      static: ap-northeast-2
#      auto: false
#    stack:
#      auto: false